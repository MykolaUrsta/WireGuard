services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: wireguard_db
    environment:
      POSTGRES_DB: wireguard_db
      POSTGRES_USER: wireguard_user
      POSTGRES_PASSWORD: wireguard_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wireguard_network
    restart: unless-stopped

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: wireguard_redis
    networks:
      - wireguard_network
    restart: unless-stopped

  # Django Web Application
  web:
    build: 
      context: ./wg_portal
      dockerfile: Dockerfile
      target: base
      cache_from:
        - wireguard-portal:latest
    image: wireguard-portal:latest
    container_name: wireguard_web
    environment:
      - DEBUG=False
      - DATABASE_URL=postgres://wireguard_user:wireguard_password_2024@db:5432/wireguard_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-very-secret-key-change-this-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,wg-portal.itc.gov.ua,95.46.73.218
      - SYNC_INTERVAL=1
    volumes:
      - wireguard_configs:/app/wireguard_configs
      - ./logs:/app/logs
      - static_files:/app/staticfiles
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - redis
    networks:
      - wireguard_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # WireGuard VPN Server
  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard_vpn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Uzhgorod
      - SERVERURL=auto
      - SERVERPORT=51820
      - PEERS=0
      - PEERDNS=1.1.1.1,8.8.8.8
      - INTERNAL_SUBNET=10.99.97.0
      - ALLOWEDIPS=0.0.0.0/0
      - LOG_CONFS=true
    volumes:
      - wireguard_configs:/config
      - /lib/modules:/lib/modules
      - ./wireguard_scripts:/scripts
    ports:
      - "51820:51820/udp"
      - "8000-8500:8000-8500/udp"  # Діапазон портів для локацій
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      wireguard_network:
        ipv4_address: 172.20.0.10
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: wireguard_nginx
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"  # HTTP/3 QUIC support
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl/certbot/conf:/etc/letsencrypt
      - ./ssl/certbot/www:/var/www/certbot
      - static_files:/var/www/static
    depends_on:
      - web
    networks:
      - wireguard_network
    restart: unless-stopped

  # Certbot for Let's Encrypt SSL certificates
  certbot:
    image: certbot/certbot
    container_name: wireguard_certbot
    volumes:
      - ./ssl/certbot/conf:/etc/letsencrypt
      - ./ssl/certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email admin@itc.gov.ua -d wg-portal.itc.gov.ua --agree-tos --non-interactive
    depends_on:
      - nginx
    networks:
      - wireguard_network
    profiles:
      - ssl

volumes:
  postgres_data:
  wireguard_configs:
  static_files:

networks:
  wireguard_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
